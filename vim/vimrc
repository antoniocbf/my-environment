" *****************
" Snippet section *
" *****************

" python << EOF
" import os
" import sys
" import vim
" for p in sys.path:
" 	if os.path.isdir(p):
" 		vim.command(r"set path+=%s" % (p.replace(" ", r"\ ")))
" EOF

" ****************
" Script section *
" ****************

"
"

" ****************
" Config section *
" ****************

syntax on
autocmd FileType python set omnifunc=pysmell#Complete
"autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd BufNewFile,BufRead *.xml source ~/l30-environment/vim/ftplugin/xml.vim

let ropevim_vim_completion=1
let ropevim_guess_project=1

let g:fuzzy_roots = ['./dev', './l30-environment']
let g:fuzzy_ignore = "*.bak,*.pyc,*.py~,*.pdf,*.so,*.gif,*.jpg,*.flv,*.class,*.png,*/tools/*,*/docs/*" 
let g:fuzzy_ceiling = 50000
let g:fuzzy_enumerating_limit = 25

colorscheme metacosm
"set tags+=$HOME/.vim/tags/python.ctags
set textwidth=0
set guifont=Monospace\ 10
set tabstop=4
set shiftwidth=4
set encoding=utf-8
set expandtab
set smarttab
set smartindent
set showmode
set showmatch      " Show matching brackets.
set autowrite      " Automatically save before commands like :next and :make
set ignorecase     " Do case insensitive matching
set incsearch      " Incremental search
set ruler
set linebreak
set nocompatible
set guioptions-=T  " Turn toolbar off
set virtualedit=all
"set showcmd       " Show (partial) command in status line.
"set smartcase     " Do smart case matching

" *****************
" Mapping section *
" *****************

map <silent><C-Left> <C-T>
map <silent><C-Right> <C-]>
vmap <C-y> "+y
nmap <C-s> :w<CR>
imap <C-s> <ESC>:w<CR>a
nmap j gj
nmap k gk
imap jj <ESC>

"imap <silent><Down> <ESC>gja
"imap <silent><Up> <ESC>gka

nmap <F2> :NERDTreeToggle<CR>
nmap <F3> :FuzzyFinderTextMate<CR>

nmap <silent><C-n> :tabnew<CR>
nnoremap x :q<CR>
nnoremap X :q!<CR>
nnoremap <silent><F8> :TlistToggle<CR>

" inoremap <C-Space> <C-x><C-o>
imap <C-Space> <ESC>l:RopeCodeAssist<CR>
nmap <C-Space> :RopeCodeAssist<CR>

map <C-J> <C-W>j<C-W>_
map <C-K> <C-W>k<C-W>_
set wmh=0
